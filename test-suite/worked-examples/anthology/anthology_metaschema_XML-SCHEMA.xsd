<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:m="http://csrc.nist.gov/ns/oscal/metaschema/1.0"
           xmlns:ανθ="http://csrc.nist.gov/metaschema/ns/anthology"
           xmlns:oscal-prose="http://csrc.nist.gov/metaschema/ns/anthology"
           elementFormDefault="qualified"
           targetNamespace="http://csrc.nist.gov/metaschema/ns/anthology"
           version="1.0">
   <xs:annotation>
      <xs:appinfo>
         <m:schema-name>Anthology Metaschema</m:schema-name>
         <m:schema-version>1.0</m:schema-version>
         <m:short-name>ανθ</m:short-name>
         <m:remarks>
            <p>A mini metaschema produced for testing purposes. Use at your own risk.</p>
         </m:remarks>
         <m:root>ANTHOLOGY</m:root>
      </xs:appinfo>
   </xs:annotation>
   <xs:element name="ANTHOLOGY" type="ανθ:anthology-ASSEMBLY"/>
   <xs:complexType name="anthology-ASSEMBLY">
      <xs:annotation>
         <xs:appinfo>
            <m:formal-name>Anthology</m:formal-name>
            <m:description>A collection of literary excerpts</m:description>
         </xs:appinfo>
         <xs:documentation>
            <b>Anthology</b>: A collection of literary excerpts</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element name="meta"
                     type="ανθ:meta-ASSEMBLY"
                     minOccurs="1"
                     maxOccurs="1"/>
         <xs:element name="piece"
                     type="ανθ:piece-ASSEMBLY"
                     minOccurs="0"
                     maxOccurs="unbounded"/>
         <xs:element name="back"
                     type="ανθ:back-ASSEMBLY"
                     minOccurs="0"
                     maxOccurs="1"/>
      </xs:sequence>
      <xs:attribute name="id" type="xs:NCName">
         <xs:annotation>
            <xs:appinfo>
               <m:formal-name>Identifier</m:formal-name>
               <m:description>A distinct code</m:description>
            </xs:appinfo>
            <xs:documentation>
               <b>Identifier</b>: A distinct code</xs:documentation>
         </xs:annotation>
      </xs:attribute>
   </xs:complexType>
   <xs:complexType name="meta-ASSEMBLY">
      <xs:annotation>
         <xs:appinfo>
            <m:formal-name>Front matter / metadata</m:formal-name>
            <m:description>Metadata for the anthology as a ^whole, or for a single piece within it</m:description>
         </xs:appinfo>
         <xs:documentation>
            <b>Front matter / metadata</b>: Metadata for the anthology as a ^whole, or for a single piece within it</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element name="creator"
                     type="ανθ:creator-FIELD"
                     minOccurs="0"
                     maxOccurs="unbounded"/>
         <xs:element name="date" type="ανθ:date-FIELD" minOccurs="0" maxOccurs="1"/>
         <xs:element name="keyword" minOccurs="0" maxOccurs="unbounded">
            <xs:simpleType>
               <xs:annotation>
                  <xs:appinfo>
                     <m:formal-name>Key word</m:formal-name>
                     <m:description>A string</m:description>
                  </xs:appinfo>
                  <xs:documentation>
                     <b>Key word</b>: A string</xs:documentation>
               </xs:annotation>
               <xs:restriction base="xs:string"/>
            </xs:simpleType>
         </xs:element>
         <xs:element name="remarks" minOccurs="0" maxOccurs="1">
            <xs:annotation>
               <xs:appinfo>
                  <m:formal-name>Remarks</m:formal-name>
                  <m:description>Pertinent information of any kind.</m:description>
               </xs:appinfo>
               <xs:documentation>
                  <b>Remarks</b>: Pertinent information of any kind.</xs:documentation>
            </xs:annotation>
            <xs:complexType>
               <xs:group ref="ανθ:blockElementGroup" maxOccurs="unbounded" minOccurs="0"/>
            </xs:complexType>
         </xs:element>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="date-FIELD">
      <xs:annotation>
         <xs:appinfo>
            <m:formal-name>Date</m:formal-name>
            <m:description>As represented</m:description>
         </xs:appinfo>
         <xs:documentation>
            <b>Date</b>: As represented</xs:documentation>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:string">
            <xs:attribute name="type" type="xs:string">
               <xs:annotation>
                  <xs:appinfo>
                     <m:formal-name>Type of date representation</m:formal-name>
                     <m:description>May be given as a formatting code, e.g. 'YYYY' for year only. It is up to implementations to implement logic.</m:description>
                  </xs:appinfo>
                  <xs:documentation>
                     <b>Type of date representation</b>: May be given as a formatting code, e.g. 'YYYY' for year only. It is up to implementations to implement logic.</xs:documentation>
               </xs:annotation>
            </xs:attribute>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="creator-FIELD">
      <xs:annotation>
         <xs:appinfo>
            <m:formal-name>Creator (author or editor)</m:formal-name>
            <m:description>The text contents should name the person; the optional <m:code>who</m:code> flag links it to the index.</m:description>
         </xs:appinfo>
         <xs:documentation>
            <b>Creator (author or editor)</b>: The text contents should name the person; the optional who flag links it to the index.</xs:documentation>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:string">
            <xs:attribute name="role" use="required" type="xs:string">
               <xs:annotation>
                  <xs:appinfo>
                     <m:formal-name>Role</m:formal-name>
                     <m:description>Contribution of the creator</m:description>
                  </xs:appinfo>
                  <xs:documentation>
                     <b>Role</b>: Contribution of the creator</xs:documentation>
               </xs:annotation>
            </xs:attribute>
            <xs:attribute name="who" type="xs:string">
               <xs:annotation>
                  <xs:appinfo>
                     <m:formal-name>Person identifier</m:formal-name>
                     <m:description>Relates a person to the biographical index</m:description>
                  </xs:appinfo>
                  <xs:documentation>
                     <b>Person identifier</b>: Relates a person to the biographical index</xs:documentation>
               </xs:annotation>
            </xs:attribute>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="piece-ASSEMBLY">
      <xs:annotation>
         <xs:appinfo>
            <m:formal-name>Piece</m:formal-name>
            <m:description>A single anthologized piece; poetry or prose, entire or excerpted</m:description>
         </xs:appinfo>
         <xs:documentation>
            <b>Piece</b>: A single anthologized piece; poetry or prose, entire or excerpted</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element name="meta"
                     type="ανθ:meta-ASSEMBLY"
                     minOccurs="0"
                     maxOccurs="1"/>
         <xs:choice>
            <xs:element name="verse"
                        type="ανθ:verse-ASSEMBLY"
                        minOccurs="0"
                        maxOccurs="1"/>
            <xs:element name="prose" minOccurs="0" maxOccurs="1">
               <xs:annotation>
                  <xs:appinfo>
                     <m:formal-name>Prose</m:formal-name>
                     <m:description>Short prose or an excerpt</m:description>
                  </xs:appinfo>
                  <xs:documentation>
                     <b>Prose</b>: Short prose or an excerpt</xs:documentation>
               </xs:annotation>
               <xs:complexType>
                  <xs:group ref="ανθ:blockElementGroup" maxOccurs="unbounded" minOccurs="0"/>
               </xs:complexType>
            </xs:element>
         </xs:choice>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="verse-ASSEMBLY">
      <xs:annotation>
         <xs:appinfo>
            <m:formal-name>Verse</m:formal-name>
            <m:description>A composition in lines, or an excerpt from such a composition</m:description>
         </xs:appinfo>
         <xs:documentation>
            <b>Verse</b>: A composition in lines, or an excerpt from such a composition</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:choice>
            <xs:element name="line"
                        type="ανθ:line-FIELD"
                        minOccurs="0"
                        maxOccurs="unbounded"/>
            <xs:element name="stanza"
                        type="ανθ:stanza-ASSEMBLY"
                        minOccurs="0"
                        maxOccurs="unbounded"/>
         </xs:choice>
      </xs:sequence>
      <xs:attribute name="type" type="xs:string">
         <xs:annotation>
            <xs:appinfo>
               <m:formal-name>Verse type</m:formal-name>
               <m:description>Any specialized form such as Byronic, terza rima, sestina, sonnet</m:description>
            </xs:appinfo>
            <xs:documentation>
               <b>Verse type</b>: Any specialized form such as Byronic, terza rima, sestina, sonnet</xs:documentation>
         </xs:annotation>
      </xs:attribute>
   </xs:complexType>
   <xs:complexType mixed="true" name="line-FIELD">
      <xs:complexContent>
         <xs:extension base="ανθ:markupLineType">
            <xs:attribute name="feet" type="xs:integer">
               <xs:annotation>
                  <xs:appinfo>
                     <m:formal-name>Meter count(feet)</m:formal-name>
                     <m:description>Count of metrical feet (dimeter, trimeter, tetrameter etc) represented as a natural number</m:description>
                  </xs:appinfo>
                  <xs:documentation>
                     <b>Meter count(feet)</b>: Count of metrical feet (dimeter, trimeter, tetrameter etc) represented as a natural number</xs:documentation>
               </xs:annotation>
            </xs:attribute>
            <xs:attribute name="base" type="xs:string">
               <xs:annotation>
                  <xs:appinfo>
                     <m:formal-name>Base meter</m:formal-name>
                     <m:description>Identifies the base metrical type, if any</m:description>
                  </xs:appinfo>
                  <xs:documentation>
                     <b>Base meter</b>: Identifies the base metrical type, if any</xs:documentation>
               </xs:annotation>
            </xs:attribute>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="stanza-ASSEMBLY">
      <xs:annotation>
         <xs:appinfo>
            <m:formal-name>Stanza</m:formal-name>
            <m:description>A group of lines within a verse</m:description>
         </xs:appinfo>
         <xs:documentation>
            <b>Stanza</b>: A group of lines within a verse</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element name="line"
                     type="ανθ:line-FIELD"
                     minOccurs="0"
                     maxOccurs="unbounded"/>
      </xs:sequence>
      <xs:attribute name="type" type="xs:string">
         <xs:annotation>
            <xs:appinfo>
               <m:formal-name>Verse type</m:formal-name>
               <m:description>Any specialized form such as Byronic, terza rima, sestina, sonnet</m:description>
            </xs:appinfo>
            <xs:documentation>
               <b>Verse type</b>: Any specialized form such as Byronic, terza rima, sestina, sonnet</xs:documentation>
         </xs:annotation>
      </xs:attribute>
   </xs:complexType>
   <xs:complexType name="back-ASSEMBLY">
      <xs:annotation>
         <xs:appinfo>
            <m:formal-name>Back matter</m:formal-name>
            <m:description>Indexes and appurtenances</m:description>
         </xs:appinfo>
         <xs:documentation>
            <b>Back matter</b>: Indexes and appurtenances</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element name="author-index"
                     type="ανθ:author-index-ASSEMBLY"
                     minOccurs="0"
                     maxOccurs="1"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="author-index-ASSEMBLY">
      <xs:annotation>
         <xs:appinfo>
            <m:formal-name>Author index</m:formal-name>
            <m:description>Information about authors cited in the anthology</m:description>
         </xs:appinfo>
         <xs:documentation>
            <b>Author index</b>: Information about authors cited in the anthology</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element name="author"
                     type="ανθ:author-ASSEMBLY"
                     minOccurs="0"
                     maxOccurs="unbounded"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="author-ASSEMBLY">
      <xs:annotation>
         <xs:appinfo>
            <m:formal-name>Author</m:formal-name>
            <m:description>A single author cited in the anthology, with relevant info</m:description>
         </xs:appinfo>
         <xs:documentation>
            <b>Author</b>: A single author cited in the anthology, with relevant info</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element name="name" type="ανθ:name-FIELD" minOccurs="0" maxOccurs="1"/>
         <xs:element name="dates"
                     type="ανθ:dates-ASSEMBLY"
                     minOccurs="0"
                     maxOccurs="1"/>
         <xs:element name="publication"
                     type="ανθ:publication-FIELD"
                     minOccurs="0"
                     maxOccurs="unbounded"/>
         <xs:element name="bio" type="ανθ:bio-ASSEMBLY" minOccurs="0" maxOccurs="1"/>
      </xs:sequence>
      <xs:attribute name="id" use="required" type="xs:NCName">
         <xs:annotation>
            <xs:appinfo>
               <m:formal-name>Identifier</m:formal-name>
               <m:description>A distinct code</m:description>
            </xs:appinfo>
            <xs:documentation>
               <b>Identifier</b>: A distinct code</xs:documentation>
         </xs:annotation>
      </xs:attribute>
   </xs:complexType>
   <xs:simpleType name="name-FIELD">
      <xs:annotation>
         <xs:appinfo>
            <m:formal-name>Name</m:formal-name>
            <m:description>A personal or place name</m:description>
         </xs:appinfo>
         <xs:documentation>
            <b>Name</b>: A personal or place name</xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:string"/>
   </xs:simpleType>
   <xs:complexType name="bio-ASSEMBLY">
      <xs:annotation>
         <xs:appinfo>
            <m:formal-name>Biographical info</m:formal-name>
            <m:description>Gives basic facts or colorful detail.</m:description>
         </xs:appinfo>
         <xs:documentation>
            <b>Biographical info</b>: Gives basic facts or colorful detail.</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element name="name"
                     type="ανθ:name-FIELD"
                     minOccurs="0"
                     maxOccurs="unbounded"/>
         <xs:element name="facts" minOccurs="0" maxOccurs="3">
            <xs:complexType>
               <xs:annotation>
                  <xs:appinfo>
                     <m:formal-name>Facts</m:formal-name>
                     <m:description>Structured data</m:description>
                  </xs:appinfo>
                  <xs:documentation>
                     <b>Facts</b>: Structured data</xs:documentation>
               </xs:annotation>
               <xs:sequence>
                  <xs:element name="dates"
                              type="ανθ:dates-ASSEMBLY"
                              minOccurs="0"
                              maxOccurs="1"/>
                  <xs:element name="residence" minOccurs="0" maxOccurs="unbounded">
                     <xs:complexType>
                        <xs:annotation>
                           <xs:appinfo>
                              <m:formal-name>Residency</m:formal-name>
                              <m:description>A range of values in time-space</m:description>
                           </xs:appinfo>
                           <xs:documentation>
                              <b>Residency</b>: A range of values in time-space</xs:documentation>
                        </xs:annotation>
                        <xs:sequence>
                           <xs:element name="dates" minOccurs="0" maxOccurs="1">
                              <xs:complexType>
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <m:formal-name>Dates</m:formal-name>
                                       <m:description>Start to end</m:description>
                                    </xs:appinfo>
                                    <xs:documentation>
                                       <b>Dates</b>: Start to end</xs:documentation>
                                 </xs:annotation>
                                 <xs:attribute name="start" type="xs:date">
                                    <xs:annotation>
                                       <xs:appinfo>
                                          <m:formal-name>Start</m:formal-name>
                                          <m:description>When initiated</m:description>
                                       </xs:appinfo>
                                       <xs:documentation>
                                          <b>Start</b>: When initiated</xs:documentation>
                                    </xs:annotation>
                                 </xs:attribute>
                                 <xs:attribute name="end" type="xs:date">
                                    <xs:annotation>
                                       <xs:appinfo>
                                          <m:formal-name>End</m:formal-name>
                                          <m:description>When concluded or abandoned</m:description>
                                       </xs:appinfo>
                                       <xs:documentation>
                                          <b>End</b>: When concluded or abandoned</xs:documentation>
                                    </xs:annotation>
                                 </xs:attribute>
                              </xs:complexType>
                           </xs:element>
                        </xs:sequence>
                     </xs:complexType>
                  </xs:element>
               </xs:sequence>
            </xs:complexType>
         </xs:element>
         <xs:element name="colorful-details" minOccurs="0" maxOccurs="1">
            <xs:complexType>
               <xs:annotation>
                  <xs:appinfo>
                     <m:formal-name>Colorful details</m:formal-name>
                     <m:description>Unstructured data</m:description>
                  </xs:appinfo>
                  <xs:documentation>
                     <b>Colorful details</b>: Unstructured data</xs:documentation>
               </xs:annotation>
               <xs:sequence>
                  <xs:element name="dates" minOccurs="0" maxOccurs="1">
                     <xs:simpleType>
                        <xs:annotation>
                           <xs:appinfo>
                              <m:formal-name>Dates</m:formal-name>
                              <m:description>This time, a string, so "Lincoln's Birthday" is a date.</m:description>
                           </xs:appinfo>
                           <xs:documentation>
                              <b>Dates</b>: This time, a string, so "Lincoln's Birthday" is a date.</xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string"/>
                     </xs:simpleType>
                  </xs:element>
                  <xs:element name="remarks" minOccurs="0" maxOccurs="1">
                     <xs:annotation>
                        <xs:appinfo>
                           <m:formal-name>Remarks</m:formal-name>
                           <m:description>Pertinent information of any kind.</m:description>
                        </xs:appinfo>
                        <xs:documentation>
                           <b>Remarks</b>: Pertinent information of any kind.</xs:documentation>
                     </xs:annotation>
                     <xs:complexType>
                        <xs:group ref="ανθ:blockElementGroup" maxOccurs="unbounded" minOccurs="0"/>
                     </xs:complexType>
                  </xs:element>
               </xs:sequence>
            </xs:complexType>
         </xs:element>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dates-ASSEMBLY">
      <xs:annotation>
         <xs:appinfo>
            <m:formal-name>Dates</m:formal-name>
            <m:description>As a range (birth-death) or floruit</m:description>
         </xs:appinfo>
         <xs:documentation>
            <b>Dates</b>: As a range (birth-death) or floruit</xs:documentation>
      </xs:annotation>
      <xs:attribute name="birth" type="xs:date">
         <xs:annotation>
            <xs:appinfo>
               <m:formal-name>Birth date</m:formal-name>
               <m:description>If only the year is known use June 30.</m:description>
            </xs:appinfo>
            <xs:documentation>
               <b>Birth date</b>: If only the year is known use June 30.</xs:documentation>
         </xs:annotation>
      </xs:attribute>
      <xs:attribute name="death" type="xs:date">
         <xs:annotation>
            <xs:appinfo>
               <m:formal-name>Death date</m:formal-name>
               <m:description>If only the year is known use July 1.</m:description>
            </xs:appinfo>
            <xs:documentation>
               <b>Death date</b>: If only the year is known use July 1.</xs:documentation>
         </xs:annotation>
      </xs:attribute>
      <xs:attribute name="floruit" type="xs:date">
         <xs:annotation>
            <xs:appinfo>
               <m:formal-name>Floruit date</m:formal-name>
               <m:description>Do not use along with both birth and death</m:description>
            </xs:appinfo>
            <xs:documentation>
               <b>Floruit date</b>: Do not use along with both birth and death</xs:documentation>
         </xs:annotation>
      </xs:attribute>
   </xs:complexType>
   <xs:complexType name="publication-FIELD">
      <xs:annotation>
         <xs:appinfo>
            <m:formal-name>Publication</m:formal-name>
            <m:description>A publication attributed to an author</m:description>
         </xs:appinfo>
         <xs:documentation>
            <b>Publication</b>: A publication attributed to an author</xs:documentation>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:string">
            <xs:attribute name="date" type="xs:date">
               <xs:annotation>
                  <xs:appinfo>
                     <m:formal-name>Publication date</m:formal-name>
                     <m:description>Date of (first) publication</m:description>
                  </xs:appinfo>
                  <xs:documentation>
                     <b>Publication date</b>: Date of (first) publication</xs:documentation>
               </xs:annotation>
            </xs:attribute>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="markupLineType" mixed="true">
      <xs:group ref="ανθ:mixedInlineMarkupGroup"/>
   </xs:complexType>
   <xs:complexType name="markupMultilineType">
      <xs:group ref="ανθ:blockElementGroup"/>
   </xs:complexType>
   <xs:group name="blockElementGroup">
      <xs:sequence>
         <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:element name="h1" type="ανθ:blockElementType"/>
            <xs:element name="h2" type="ανθ:blockElementType"/>
            <xs:element name="h3" type="ανθ:blockElementType"/>
            <xs:element name="h4" type="ανθ:blockElementType"/>
            <xs:element name="h5" type="ανθ:blockElementType"/>
            <xs:element name="h6" type="ανθ:blockElementType"/>
            <xs:element name="p" type="ανθ:blockElementType"/>
            <xs:element name="ul" type="ανθ:listType"/>
            <xs:element name="ol" type="ανθ:listType"/>
            <xs:element name="pre" type="ανθ:preformattedType"/>
            <xs:element name="table" type="ανθ:tableType"/>
            <!-- TODO: need to add support for blockquote, which can contain block elements. usnistgov/metaschema#70 -->
         </xs:choice>
      </xs:sequence>
   </xs:group>
   <!--
    headers: phrase inline markup, a, insert (phrase)
    p: phrase inline markup, a, insert, img (phrase+img)
    li: phrase inline markup, a, insert, img (phrase+img)
    pre: phrase inline markup, a, insert (phrase)
    td th: phrase inline markup, a, insert, img (phrase+img)
  -->
   <xs:complexType name="blockElementType" mixed="true">
      <xs:group ref="ανθ:phraseInlineMarkupGroup"/>
   </xs:complexType>
   <xs:complexType name="headingType" mixed="true">
      <xs:complexContent>
         <xs:extension base="ανθ:blockElementType">
            <xs:annotation>
               <xs:documentation>The content model is the same as blockElementType, but line endings need
            to be preserved, since this is preformatted.</xs:documentation>
            </xs:annotation>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="preformattedType" mixed="true">
      <xs:complexContent>
         <xs:extension base="ανθ:blockElementType">
            <xs:annotation>
               <xs:documentation>The content model is the same as blockElementType, but line endings need
            to be preserved, since this is preformatted.</xs:documentation>
            </xs:annotation>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="listType">
      <xs:sequence>
         <xs:element name="li"
                     type="ανθ:listItemType"
                     minOccurs="1"
                     maxOccurs="unbounded"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="listItemType" mixed="true">
      <xs:choice minOccurs="0" maxOccurs="unbounded">
         <xs:group ref="ανθ:mixedInlineMarkupGroup"/>
         <xs:element name="ul" type="ανθ:listType"/>
         <xs:element name="ol" type="ανθ:listType"/>
      </xs:choice>
   </xs:complexType>
   <xs:complexType name="tableType">
      <xs:sequence>
         <xs:element maxOccurs="unbounded" name="tr" type="ανθ:tableRowType"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tableRowType"><!-- QUESTION: Should we allow TH and TD to be mixed? -->
      <xs:choice minOccurs="0" maxOccurs="unbounded">
         <xs:element name="td" type="ανθ:tableCellType" maxOccurs="unbounded"/>
         <xs:element name="th" type="ανθ:tableCellType" maxOccurs="unbounded"/>
      </xs:choice>
   </xs:complexType>
   <xs:complexType name="tableCellType" mixed="true">
      <xs:group ref="ανθ:mixedInlineMarkupGroup"/>
      <!-- TODO: consider adding a choice between the inline or paragraphs. We need to figure out what is supported in Markdown. -->
      <xs:attribute name="align" type="ανθ:alignType" default="left"/>
      <!-- TODO: need to add support for alignment. usnistgov/metaschema#70 -->
   </xs:complexType>
   <xs:simpleType name="alignType">
      <xs:restriction base="xs:token">
         <xs:enumeration value="left"/>
         <xs:enumeration value="center"/>
         <xs:enumeration value="right"/>
      </xs:restriction>
   </xs:simpleType>
   <!-- note mix does not include anchors, which do not come for free -->
   <xs:group name="mixedInlineMarkupGroup">
      <xs:sequence>
         <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="ανθ:phraseInlineMarkupGroup"/>
            <xs:element name="img" type="ανθ:imageType"/>
         </xs:choice>
      </xs:sequence>
   </xs:group>
   <xs:group name="phraseInlineMarkupGroup">
      <xs:sequence>
         <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="code" type="ανθ:inlineMarkupType" minOccurs="1"/>
            <xs:element name="em" type="ανθ:inlineMarkupType" minOccurs="1"/>
            <xs:element name="i" type="ανθ:inlineMarkupType" minOccurs="1"/>
            <xs:element name="b" type="ανθ:inlineMarkupType" minOccurs="1"/>
            <xs:element name="strong" type="ανθ:inlineMarkupType" minOccurs="1"/>
            <xs:element name="sub" type="ανθ:inlineMarkupType" minOccurs="1"/>
            <xs:element name="sup" type="ανθ:inlineMarkupType" minOccurs="1"/>
            <xs:element name="q" type="ανθ:inlineMarkupType" minOccurs="1"/>
            <xs:element name="insert" type="ανθ:insertType"/>
            <xs:element name="a" type="ανθ:anchorType"/>
         </xs:choice>
      </xs:sequence>
   </xs:group>
   <xs:complexType name="inlineMarkupType" mixed="true">
      <xs:group ref="ανθ:phraseInlineMarkupGroup"/>
   </xs:complexType>
   <xs:complexType name="imageType">
      <xs:attribute name="alt" type="xs:string"/>
      <xs:attribute name="src" use="required" type="xs:anyURI"/>
   </xs:complexType>
   <xs:complexType name="anchorType" mixed="true">
      <xs:group ref="ανθ:phraseInlineMarkupGroup"/>
      <xs:attribute name="href" type="xs:anyURI"/>
   </xs:complexType>
   <!--
    A value to be assigned by responder via parameter
    (a parameter must be available)
  -->
   <xs:complexType name="insertType">
      <xs:attribute name="param-id" use="required" type="xs:NCName"/>
   </xs:complexType>
   <!--
    Within a selection, a choice - tbd
    unlike 'value', choice may have inline stuff as well as 'assign' elements
    choice = element choice { (assign | mix)* }
  -->
   <!--
    IDs are required everywhere for now
    idAttr      = attribute id { xsd:ID }
  -->
</xs:schema>
