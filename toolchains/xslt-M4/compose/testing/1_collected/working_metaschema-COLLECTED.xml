<METASCHEMA xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xmlns="http://csrc.nist.gov/ns/oscal/metaschema/1.0"
            module="oscal-test"
            src="...">
   <schema-name>OSCAL TEST Format</schema-name>
   <schema-version>0.0</schema-version>
   <short-name>oscal-test</short-name>
   <namespace>http://csrc.nist.gov/ns/metaschema/test</namespace>
   <remarks>
      <p>For exercising Metaschema semantics with respect to modular assembly and composition.</p>
   </remarks>
   <METASCHEMA abstract="yes"
               module="oscal-test-m1"
               src="...">
      <schema-name>OSCAL TEST Format Module</schema-name>
      <schema-version>0.0</schema-version>
      <short-name>oscal-test-m1</short-name>
      <namespace>http://csrc.nist.gov/ns/metaschema/test</namespace>
      <define-assembly name="module-assembly">
         <formal-name>Assembly defined in a module</formal-name>
         <description>XXX</description>
         <define-flag name="inline-flag">
            <formal-name>Flag defined inline</formal-name>
            <description>XXX</description>
         </define-flag>
         <model>
            <field ref="global-field"/>
            <field ref="oscal-test-m1-local-field"><use-name>local-field</use-name></field>
            <define-field name="inline-field">
               <formal-name>Locally defined field</formal-name>
               <description>XXX</description>
            </define-field>
         </model>
      </define-assembly>
      <define-field name="global-field">
         <formal-name>Field, defined in module 'oscal-test-m1' (global by default)</formal-name>
         <description>XXX</description>
      </define-field>
      <define-field name="oscal-test-m1-local-field" scope="local">
         <formal-name>Field, defined in module 'oscal-test-m1' as local</formal-name>
            <description>ZZZ</description>
            <use-name>local-field</use-name>
         </define-field>
   </METASCHEMA>
   <define-assembly name="root">
      <formal-name>Nominal root</formal-name>
      <description>XXX</description>
      <root-name>root-assembly</root-name>
      <flag ref="global-flag"/>      
      <define-flag name="inline-flag">
         <formal-name>Flag defined inline on root-assembly</formal-name>
         <description>XXX</description>
      </define-flag>
      <model>
         <field ref="global-field"/>
         <field ref="oscal-test-local-field"><use-name>local-field</use-name></field>
         <define-field name="inline-field">
            <formal-name>Field defined inline on root-assembly</formal-name>
            <description>XXX</description>
         </define-field>
      </model>
   </define-assembly>
   <define-field name="global-field">
      <formal-name>Field, defined at top level (global by default)</formal-name>
      <description>XXX</description>
   </define-field>
   <define-field name="oscal-test-local-field" scope="local">
      <formal-name>Field, defined in module 'oscal-test' at top level as 'local'</formal-name>
      <description>XXX</description>
      <use-name>local-field</use-name>
   </define-field>
   <define-flag name="global-flag">
      <formal-name>Flag, defined globally</formal-name>
      <description>XXX</description>
   </define-flag>
</METASCHEMA>
